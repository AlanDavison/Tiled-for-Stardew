name: Build Packages

on:
  push:
    paths-ignore:
    - 'docs/**'
    - '**.md'
    - 'appveyor.yml'
    - '.travis.yml'
  pull_request:
    paths-ignore:
    - 'docs/**'
    - '**.md'
    - 'appveyor.yml'
    - '.travis.yml'

env:
  QT_VERSION: 5.15.2
  QTCREATOR_VERSION: 4.15.0
  SENTRY_VERSION: 0.4.9
  TILED_RELEASE: ${{ startsWith(github.ref, 'refs/tags/v') }}
  TILED_SNAPSHOT: ${{ !startsWith(github.ref, 'refs/tags/v') }}

jobs:
  version:
    name: Determine Tiled version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      release: ${{ steps.get-version.outputs.release }}

    steps:
    - name: Get version
      id: get-version
      run: |
        if [[ "$TILED_RELEASE" == 'true' ]]; then echo "::set-output name=version::${GITHUB_REF:11}" ; fi
        if [[ "$TILED_RELEASE" != 'true' ]]; then echo "::set-output name=version::$(date "+%Y.%m.%d")" ; fi
        echo "::set-output name=release::${TILED_RELEASE}"

  windows:
    name: Windows (${{ matrix.arch }}-bit)
    runs-on: windows-latest
    needs: version

    strategy:
      matrix:
        include:
        - arch: 32
          openssl_arch: x86
          toolchain: win32_msvc2019
          profile: MSVC2019-x86
        - arch: 64
          openssl_arch: x64
          toolchain: win64_msvc2019_64
          profile: MSVC2019-x64

    env:
      TILED_VERSION: ${{ needs.version.outputs.version }}
      OPENSSL_VERSION: 1.1.1

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Qt
      run: |
        echo "QT_PATH=$(./dist/install-qt.sh --version ${QT_VERSION} --toolchain ${{ matrix.toolchain }} qtbase qtdeclarative qtscript qtsvg qtimageformats qttools qttranslations)" >> $GITHUB_ENV
        echo "OPENSSL_PATH=$(./dist/install-qt.sh --version ${OPENSSL_VERSION} openssl --arch ${{ matrix.openssl_arch }})" >> $GITHUB_ENV
        ./dist/install-qt.sh --version ${QTCREATOR_VERSION} qtcreator >> $GITHUB_PATH

    - name: Setup Qbs
      run: |
        qbs setup-toolchains --detect
        qbs config defaultProfile ${{ matrix.profile }}

    # - name: Build Zstandard
    #   run: |
    #     export PATH="${MINGW_PATH}:$PATH"
    #     git clone --depth 1 -b master https://github.com/facebook/zstd.git
    #     pushd zstd/lib
    #     CC=gcc mingw32-make -j2 libzstd.a
    #     popd

    - name: Build Tiled
      run: |
        set PATH=%QT_PATH%;%PATH%
        set TILED_MSI_VERSION=1.4.${GITHUB_RUN_NUMBER}
        qbs build config:release projects.Tiled.windowsInstaller:true projects.Tiled.enableZstd:false
        mv release/installer*/Tiled-*.msi .

    - name: Upload Tiled installer
      uses: actions/upload-artifact@v2
      with:
        name: Tiled-win${{ matrix.arch }}.msi
        path: Tiled-*.msi

    - name: Upload Tiled archive
      uses: actions/upload-artifact@v2
      with:
        name: Tiled-win${{ matrix.arch }}
        path: release/install-root/*
